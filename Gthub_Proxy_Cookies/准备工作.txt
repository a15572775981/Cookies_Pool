同样也是4个模块
1.存储模块
        负责存储每个账号的用户名密码以及每个账号对应的Cookies信息，同时还需要提供一些方法来实现方便的存取操作。

2.生成模块
        负责生成新的Cookies.此模块会从存储模块逐个拿取账号的用户名和密码，然后模块登录目标网页，判断登录成功，
        就将Cookies返回并交给存储模块存储。

3.检测模块
        需要定时检测数据库中的Cookies,在这里我们需要设置一个检测链接，不同的站点的检测链接是不同的，检测模块会
        逐个拿取账号对应的Cookies去请求链接，如果返回的状态是有效的，那么此Cookies没有失效，否则Cookies失效并移除
        接下来等待生成模块重新生成即可。

4.接口模块
        需要用API来提供对外服务的接口，由于可用的Cookies可能有多个，我们可以随机返回Cookies的接口，这样保证每个Cookies
        都有可能被取到，Cookies越多，每个Cookies被取到的概率越小，从而减少被封号的风险。

################################################需要自己配置的地方#######################################################

在启动之前先要自己设置一个登录目标网站的接口，返回值以字典{' 'status': 1,'content': 返回的cookies'} 的形式，里面例子以github为例，
github例子在Login文件夹，
然后需要导入调用登录类，在 my_generator.py 文件中的最后 WeiboCookiesGenerator 类当中的 new_cookies 方法调用
最后需要注意的是配置都在 my_settings.py 文件夹中
当所有文件定义好后，需要先启动 my_importer.py 录入自己的 目标网址的登录账户和密码后，再启动 my_run.py，去use_cookies_api中的
get_redis_db.py里面调用get_randome_cookies方法得到随机可以的cookies。
